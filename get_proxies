import requests
import re
from math import ceil
import random
import subprocess
import threading
import time
import telnetlib


class IpItem:
    def __init__(self):
        self.ip = ''  # IP
        self.port = ''  # Port
        self.type = ''  # 类型:http; https
        self.speed = -1  # 速度

    def print(self):
        print('ip: %s' % self.ip)
        print('port: %s' % self.port)
        print('type: %s' % self.type)
        print('speed: %s' % self.speed)

    # ping 地址获得速度
    def set_ip_speed(self):
        ping = subprocess.Popen('ping %s' % self.ip, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
        out, err = ping.communicate()
        info = out.decode('gbk')
        time = re.findall(r'平均.*?([0-9][0-9]?[0-9]?[0-9]?)ms', info, flags=re.DOTALL)
        if not time:
            self.speed = -2
        else:
            self.speed = time[0]

    # 测试是否可用
    def validation(self):
        try:
            telnetlib.Telnet(self.ip, port=self.port, timeout=10)
        except:
            return False
        else:
            return True


class GetIpProxy:
    # 随机产生ip访问页面
    @staticmethod
    def random_ip():
        ip = '%d.%d.%d.%d' % (
            ceil(random.choice(range(1, 254))), ceil(random.choice(range(1, 254))), ceil(random.choice(range(1, 254))),
            ceil(random.choice(range(1, 254))))
        return ip

    # 定义ip转化成类插入list
    @staticmethod
    def append_ip(raw_ip, ip_list):
        ip_item = IpItem()
        ip_item.ip = raw_ip[1]
        ip_item.port = raw_ip[2]
        ip_item.type = raw_ip[3]
        # ip_item.set_ip_speed()
        if ip_item.validation():
            ip_list.append(ip_item)

    # 传入地址获取ip，返回ip_item的list
    def get_ip(self, address):
        my_headers = {
            'x-forwarded-for': self.random_ip(),
            'user-agent': 'Mozilla/5.0 (Windows NT 10.0; WOW64; rv:58.0) Gecko/20100101 Firefox/58.0'
        }
        response = requests.get(address, headers=my_headers)
        print('access code: %s' % response.status_code)
        regex = r'([1-9][0-9]?[0-9]?\.[1-9][0-9]?[0-9]?\.[1-9][0-9]?[0-9]?\.' \
                r'[1-9][0-9]?[0-9]?).*?([1-9][0-9]?[0-9]?[0-9]?[0-9]?).*?(HTTPS?)'
        if response.status_code == 200:
            ips = re.finditer(regex, response.text, flags=re.DOTALL)
            ips_item = []
            for ip in ips:
                t = threading.Thread(target=self.append_ip, args=(ip, ips_item))  # 创建线程测试速度
                t.start()
            while threading.active_count() > 1:
                print(threading.active_count())
                time.sleep(1)
            return ips_item



if __name__ == '__main__':
    get_ip = GetIpProxy()
    ip_items = get_ip.get_ip('http://www.xicidaili.com/nn/')
    for ip in ip_items:
        response = requests.get('http://www.ifeng.com/?_zbs_firefox_gg', proxies={ip.type: '%s:%s' % (ip.ip, ip.port)})
        print(response.status_code)
